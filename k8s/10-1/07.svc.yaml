apiVersion: v1
kind: Service
metadata:
  name: c-ip-svc
  namespace: default
spec:
  ports:
  - port: 80          # Service port exposed to other ports & clients within cluster  # mandatory to mention
    protocol: TCP
    targetPort: 80    # Port on the Pod where traffic is forwarded      # if not mentioned, = port
  selector:
    app: frontend
  type: ClusterIP
status:
  loadBalancer: {}

# no of endpoint = total no of pods exposed/attached to this service
# service.spec.selector (all simultaneously, as whole) will be used to select the pods based upon the pod.metadata.labels
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: frontend
    color: blue
    city: nyc
  name: c-ip-pod
  namespace: default   # must be same as service namespace
spec:
  containers:
  - image: nginx
    name: c-ip-nginx
    ports:
    - containerPort: 80   # The port on the container where the application is listening inside the pod
      protocol: TCP


---
apiVersion: v1
kind: Service
metadata:
  name: np-svc
  namespace: default
spec:
  type: NodePort
  selector:
    flavor: blue
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 30080     # if not mentioned, it will be assigned by the system.

---
apiVersion: v1
kind: Pod
metadata:
  labels:
    flavor: blue
  name: np-pod
  namespace: default
spec:
# hostNetwork: true
  containers:
  - image: kodekloud/webapp-conntest
    name: np-kk
    env:
    - name: APP_NAME
      value: Blue - Marketing Application
    - name: BG_COLOR
      value: blue
    ports:
    - containerPort: 8080
      protocol: TCP
