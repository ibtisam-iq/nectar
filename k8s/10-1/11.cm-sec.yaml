apiVersion: v1
kind: ConfigMap
metadata:
  name: whoami-configmap
data:
  app: Karachi                          # The key is 'app' and the value is 'Karachi'
  spec: Pakistan                        # The key is 'spec' and the value is 'Pakistan'
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-using-whoami-configmap
spec:
  containers:
  - name: app-container
    image: busybox
    command: ["/bin/sh", "-c", "echo $(CITY) $(DILDILPAK) && sleep 3600"]
    env:
    - name: CITY                        # The environment variable to be used in the container
      valueFrom:
        configMapKeyRef:
          name: whoami-configmap        # Refers to the ConfigMap name 'whoami-configmap'
          key: app                      # Refers to the key 'app' in the ConfigMap
    - name: DILDILPAK                   
      valueFrom:
        configMapKeyRef:
          name: whoami-configmap         
          key: spec           
# In your ConfigMap, the key is app and its value is Karachi.
# In your Pod, the environment variable is CITY and its value is Karachi.
# In your Pod definition, the environment variable CITY is being set using the value from the ConfigMap.
# The configMapKeyRef references the ConfigMap (whoami-configmap) 
# and uses the app key to set the value of CITY to Karachi.
# The application, which expects a CITY environment variable, will find that CITY is set to Karachi when it runs.
# When this Pod runs, the environment variable CITY inside the container will be set to Karachi, 
# which is the value stored under the app key in the ConfigMap.

# Yes, the environment variable names are typically pre-configured in the application's code. The application 
# expects certain variables (like DB_PASSWORD, DB_USER, CITY, etc.) to be set, and it retrieves these values 
# from the environment at runtime.

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: abc-cm
data:
  APP_COLOR: red                  # key=APP_COLOR , value=red
#  NAME: ibtisam                 # key=NAME , value=ibtisam

---

apiVersion: v1
kind: Pod
metadata:
  name: pod-without-configmap-env
spec:
  containers:
  - name: abc-1
    image: kodekloud/webapp-color
    command: ['sh',  '-c', 'echo $APP_COLOR && sleep 3600']
    env:
    - name: APP_COLOR
      value: red


---

apiVersion: v1
kind: Pod
metadata:
  name: pod-using-configmap-env
spec:
  containers:
  - name: abc-2
    image: kodekloud/webapp-color
    command: ['sh', '-c', 'echo $APP_COLOR && echo $PWD && sleep 3600']
    envFrom:                      # used to inject all keys from a ConfigMap or Secret into a Pod as environment variables.
    - configMapRef:
        name: abc-cm              #  name of the configmap #  key=APP_COLOR , value=red # indentation

---

apiVersion: v1
kind: Pod
metadata:
  name: pod-using-configmap-specific-env
spec:
  containers:
  - name: abc-3
    image: kodekloud/webapp-color
    command: ['sh', '-c', 'echo $APP_COLOR && echo $PWD  && sleep 3600']
    env:                        #  used to inject a specific keys from a ConfigMap or Secret into a Pod as environment variables
    - name: APP_COLOR           # Name of the environment variable inside the container
      valueFrom:
        configMapKeyRef:
          name: abc-cm          # name of the configmap
          key: APP_COLOR        # Key from the ConfigMap (must match key in the ConfigMap)

---

apiVersion: v1
kind: Pod
metadata:
  name: pod-using-configmap-volume
spec:
  containers:
  - name: abc-4
    image: kodekloud/webapp-color
#   command: ['sh', '-c', 'echo $APP_COLOR && ls -l /etc/config && cat /etc/config/APP_COLOR && sleep 3600 && echo $PWD']
    command:
      - sh
      - -c
      - |
        echo $APP_COLOR
        ls -l /etc/config
        cat /etc/config/APP_COLOR
        sleep 3600 && echo $PWD
    volumeMounts:
    - name: config-volume           # Volume mount for the container
      mountPath: /etc/config            # Mount path inside the container
  volumes:
  - name: config-volume             # Define the volume
    configMap:
      name: abc-cm       # Reference to the ConfigMap

---

apiVersion: v1
kind: Pod
metadata:
  name: pod-using-configmap-volume-specific-env
spec:
  containers:
  - name: abc-5
    image: busybox
    command: ['sh', '-c', 'echo $APP_COLOR && ls /etc/config && cat /etc/config/APP_COLOR && sleep 3600']
    env:
    - name: APP_COLOR
      valueFrom:
        configMapKeyRef:
          name: abc-cm        # The name of the ConfigMap
          key: APP_COLOR      # The specific key to reference
    volumeMounts:
    - name: config-volume
      mountPath: /etc/config  # Mount the ConfigMap here # Mount path inside the container
  volumes:
  - name: config-volume
    configMap:
      name: abc-cm            # Referencing the ConfigMap

---

apiVersion: v1
kind: Secret
metadata:
  name: db-secret                 # The name of the secret
type: Opaque                      # This is the default type for a generic secret
data:
  DB_Host: c3ExMDE=               # echo  -n 'sq101' | base64     # Base64 encoded value of 'sq101'
  DB_User: cm9vdA==               # echo  -n 'root' | base64  
  DB_Password: cGFzc3dvcmQxMjM=   # echo   -n 'password123' | base64

---

apiVersion: v1
kind: Pod
metadata:
  name: pod-using-secret-env
spec:
  containers:
  - name: abcd-2
    image: kodekloud/simple-webapp-mysql
    command: ['sh', '-c', 'env && echo $PWD && sleep 3600']
    envFrom:                    # all data (all key-value pairs) will be injected as environment variables
    - secretRef:
        name: db-secret         # indentation

---           

apiVersion: v1
kind: Pod
metadata:
  name: pod-using-secret-specific-env 
spec:
  containers:
  - name: abcd-3
    image: kodekloud/simple-webapp-mysql
    command: ['sh', '-c', 'env && echo $PWD && sleep 3600']
    env:
    - name: DB_Host                   # Environment variable name
      valueFrom:
        secretKeyRef:
          name: db-secret         # Reference to the Secret
          key: DB_Host               # Specific key from the Secret to inject as the value for DB_Host
# This Pod injects only the DB_Host key from the db-secret as the DB_Host environment variable.

---

apiVersion: v1
kind: Pod
metadata:
  name: pod-using-secret-volume 
spec:
  containers:
  - name: abcd-3
    image: kodekloud/simple-webapp-mysql
    command: ['sh', '-c', 'env && echo $PWD && ls /etc/secrets/ && sleep 3600']
    volumeMounts:
    - name: secret-volume            # Volume mount for the container
      mountPath: /etc/secrets        # Mount path inside the container
  volumes:
  - name: secret-volume              # Define the volume
    secret:
      secretName: db-secret     # refers to the name of the Secret that is being mounted as a volume