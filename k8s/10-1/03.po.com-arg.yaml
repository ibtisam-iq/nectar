apiVersion: v1
kind: Pod
metadata:
  name: com-arg-1-1
spec:
  containers:
  - name: com-arg-busybox-1-1
    image: busybox
    command: ["sleep", "1000"]  # It becomes Docker's CMD     #     "" or '' both work.
  restartPolicy: Never
# Pod will keep running upto 1000 seconds, and then it will exit or restart.
---
apiVersion: v1
kind: Pod
metadata:
  name: com-arg-1-2
spec:
  containers:
  - name: com-arg-busybox-1-2
    image: busybox
    command: ["sleep"]        # It becomes Docker's ENTRYPOINT
    args: ["1000"]              # It becomes Docker's CMD
---
apiVersion: v1
kind: Pod
metadata:
  name: com-arg-1-3
spec:
  containers:
  - name: com-arg-busybox-1-3
    image: busybox
    command:
    - sleep
    - "1000"                    # "" is mandatory  
---
apiVersion: v1
kind: Pod
metadata:
  name: com-arg-1-4
spec:
  containers:
  - name: com-arg-busybox-1-4
    image: busybox
    command:
    - sleep
    args:
    - "1000"                      
---
apiVersion: v1
kind: Pod
metadata:
  name: com-arg-2-1
spec:
  containers:
  - name: com-arg-busybox-2-1
    image: busybox
# Inline shell script as command
    command: ["sh", "-c", "echo 'this is ibtisam'; while true; do sleep 5; done"]
---
apiVersion: v1
kind: Pod
metadata:
  name: com-arg-2-2
spec:
  containers:
  - name: com-arg-busybox-2-2
    image: busybox
    command: ["sh", "-c"]     
#   command starts the shell (sh)
    args:  ["echo 'this is ibtisam'; while true; do sleep 5; done"]
#   args contains the full script that gets passed to the shell.
---
apiVersion: v1
kind: Pod
metadata:
  name: com-arg-2-3
spec:
  containers:
  - name: com-arg-busybox-2-3
    image: busybox
    command:
    - sh
    - -c
    - echo 'this is ibtisam'; while true; do sleep 5; done
---
apiVersion: v1
kind: Pod
metadata:
  name: com-arg-3
spec:
  containers:
  - name: com-arg-busybox-3
    image: busybox              # $USER  is not set for busybox
  # command: ['sh', '-c', 'echo $USER' && 'echo $PWD'] #  Incorrect usage of '&&'
    command: ['sh', '-c', 'echo $USER && echo $PWD']
    # && for sequential execution on success or ; for unconditional sequential execution
  restartPolicy: Never
---
apiVersion: v1
kind: Pod
metadata:
  name: com-arg-4
spec:
  containers:
  - name: com-arg-busybox-4
    image: busybox  
#   command: ['sh', '-c', 'echo $PWD', 'sleep 3600']    #  incorrect
    command: ['sh', '-c', 'echo $PWD && sleep 3600']

# The command field uses sh with the -c flag, which tells the shell to execute the entire string that follows.
# The string 'echo $PWD && sleep 3600' ensures that both the echo command and the sleep command 
# are executed sequentially in the same shell.
---
apiVersion: v1
kind: Pod
metadata:
  name: com-arg-5-1
spec:
  containers:
  - name: com-arg-busybox-5-1
    image: ubuntu               # don't use busybox for /ect/os-release
#   command: ['sh', '-c', 'echo $PWD', 'ls -l /etc/os-release', 'cat /etc/os-release', 'sleep 3600'] # incorrect
    command: ["sh", "-c", "echo $PWD && ls -l /etc/os-release && cat /etc/os-release && sleep 3600"]
# It's better to use double quotes (") for commands that involve environment variables, like $PWD
# /etc/os-release is a file in ubuntu (also the correct path), but not in busybox
# cannot access '/etc/os-release/': Not a directory
---
apiVersion: v1
kind: Pod
metadata:
  name: com-arg-5-2
spec:
  containers:
  - name: com-arg-busybox-5-2
    image: ubuntu
    command:
      - sh
      - -c
      - | # Using | (a multi-line string in YAML), all commands are treated as a single string.
        echo $PWD
        ls -l /etc/os-release         
        cat /etc/os-release
        sleep 3600 && echo $USER      

# You need to combine all the commands into a single string, separated by && or line breaks within the -c section of the sh shell.