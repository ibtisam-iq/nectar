apiVersion: batch/v1

kind: Job #unlike deployment, job directly generates the pod.

metadata:
  name: my-job
  namespace: default

spec: 
  completions: 2 #1 by-default #if it 10, 10 different pods (succesful) will be generated #plural
  #parallelism  1 by-default
  backoffLimit: 4 #if it does not execute first time, how much times you want to execute?, max 4
  #activeDeadlineSeconds: 30 #if it takes >30s, it will let it down.
  template: #just like we did for deployment, but covers spec only, not include metadata
    spec: #this is spec for pod
      containers:
      - name: exam-job
        image: busybox
        command: ["echo", "this is ibtisam."]
      restartPolicy: Never #always apply at pod level


---

apiVersion: batch/v1

kind: Job

metadata:
  name: dice-job
  namespace: default

spec:
  completions: 5
  parallelism: 2
  backoffLimit: 50
  #activeDeadlineSeconds: 20
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: dice-job
        image: kodekloud/throw-dice


---

apiVersion: batch/v1

kind: CronJob

metadata:
  name: my-cronjob
  namespace: default

spec:
  schedule: "*/1 * * * *"
  jobTemplate:

    spec:
      completions: 3
      parallelism: 2
      backoffLimit: 50
      #activeDeadlineSeconds: 20
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: my-cronjob-cont
            image: busybox
            command:
            - echo
            - this is my sweetheart, Ibtisam